name: SonarCloud Code Analysis

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
  workflow_dispatch:  # Enable manual triggering
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Disable shallow clones for better analysis relevance

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Replace with your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygame 
          # Add any other dependencies your project needs

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarCloud status (using GitHub Actions API)
        id: sonarcloud-check
        run: |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          response=$(curl -sSL -X GET "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/statuses" -H "Authorization: token $GITHUB_TOKEN")
          if [[ $(echo "$response" | jq -r '.[].context == "SonarCloud Analysis"') == 'true' ]]; then
            existing_status=$(echo "$response" | jq -r '.[] | select(.context == "SonarCloud Analysis") | .state')
            if [[ "$existing_status" == "success" ]]; then
              echo "SonarCloud check already passed";
              exit 0;
            fi
          fi
          conclusion="success"  # Set the default conclusion
          echo "::set-output name=conclusion::$conclusion"

      - name: Report SonarCloud analysis result
        id: create-check-run
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const conclusion = '${{ steps.sonarcloud-check.outputs.conclusion }}';
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const headSha = pullRequest.head.sha;

            await github.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'SonarCloud Analysis',
              head_sha: headSha,
              status: 'completed',
              conclusion: conclusion,
              started_at: new Date().toISOString(),
              completed_at: new Date().toISOString(),
              output: {
                title: 'SonarCloud analysis',
                summary: conclusion === 'success' ? 'SonarCloud analysis passed.' : 'SonarCloud analysis failed.',
              },
            });

